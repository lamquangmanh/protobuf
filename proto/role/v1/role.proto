
syntax = "proto3";
import "base/v1/base.proto";

package role.v1;

message Role {
  string role_id = 1;
  string name = 2;
  string description = 3;
  string module_id = 4;
  string created_user_id = 5;
  string updated_at = 6;
  string updated_user_id = 7;
  string deleted_at = 8;
  string deleted_user_id = 9;
  string created_at = 10;
}

message Permission {
  string resource_id = 1;
  string action_id = 2;
  optional string permission_id = 3;
}

message CreateRoleData {
  string name = 1;
  string description = 2;
  string module_id = 3;
  repeated Permission permissions = 4;
}

message UpdateRoleData {
  string role_id = 1;
  string name = 2;
  string description = 3;
  string module_id = 4;
  repeated Permission permissions = 5;
}

message GetRoleRequest {
  string role_id = 1;
}

message GetRolesRequest {
  base.v1.PaginationRequest pagination = 1;
  repeated base.v1.Sort sort = 2;
  repeated base.v1.Filter filter = 3;
}

message GetRolesResponse {
  base.v1.PaginationResponse pagination = 1;
  repeated Role data = 2;
}

message CreateRoleRequest {
  CreateRoleData role = 1;
  string user_id = 2;
}

message UpdateRoleRequest {
  UpdateRoleData role = 1;
  string user_id = 2;
}

message DeleteRoleRequest {
  string role_id = 1;
  string user_id = 2;
}

message CreateSuccess {
  oneof result {
    Role role = 1;
    base.v1.ErrorResponse error = 2;
  }
}

service RoleService {
  rpc GetRole (GetRoleRequest) returns (Role) {}
  rpc GetRoles (GetRolesRequest) returns (GetRolesResponse) {}
  rpc CreateRole (CreateRoleRequest) returns (CreateSuccess) {}
  rpc UpdateRole (UpdateRoleRequest) returns (base.v1.UpdateSuccess) {}
  rpc DeleteRole (DeleteRoleRequest) returns (base.v1.DeleteSuccess) {}
}