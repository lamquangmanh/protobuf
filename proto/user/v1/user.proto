
syntax = "proto3";
import "base/v1/base.proto";

package user.v1;

enum UserStatus {
  USER_STATUS_UNSPECIFIED = 0;
  ACTIVE = 1;
  DEACTIVATED = 2;
  DELETED = 3;
}

message User {
  string user_id = 1;
  string username = 2;
  string email = 3;
  string phone = 4;
  string avatar = 5;
  UserStatus status = 6;
  string created_at = 7;
  string created_user_id = 8;
  string updated_at = 9;
  string updated_user_id = 10;
  string deleted_at = 11;
  string deleted_user_id = 12;
}

message CreateUserData {
  string username = 1;
  string email = 2;
  string password = 3;
  string phone = 4;
  string avatar = 5;
  UserStatus status = 6;
  repeated string role_ids = 7;
}

message UpdateUserData {
  string username = 1;
  string email = 2;
  string password = 3;
  string phone = 4;
  string avatar = 5;
  UserStatus status = 6;
  repeated string role_ids = 7;
  string user_id = 8;
}

message GetUserRequest {
  string user_id = 1;
}

message GetUsersRequest {
  base.v1.PaginationRequest pagination = 1;
  repeated base.v1.Sort sorts = 2;
  repeated base.v1.Filter filters = 3;
}

message GetUsersResponse {
  base.v1.PaginationResponse pagination = 1;
  repeated User data = 2;
}

message CreateUserRequest {
  CreateUserData user = 1;
  string user_id = 2;
}

message UpdateUserRequest {
  UpdateUserData user = 1;
  string user_id = 2;
}

message DeleteUserRequest {
  string user_id = 1;
  string deleted_user_id = 2;
}

message CreateSuccess {
  oneof result {
    User user = 1;
    base.v1.ErrorResponse error = 2;
  }
}

service UserService {
  rpc GetUser (GetUserRequest) returns (User) {}
  rpc GetUsers (GetUsersRequest) returns (GetUsersResponse) {}
  rpc CreateUser (CreateUserRequest) returns (CreateSuccess) {}
  rpc UpdateUser (UpdateUserRequest) returns (base.v1.UpdateSuccess) {}
  rpc DeleteUser (DeleteUserRequest) returns (base.v1.DeleteSuccess) {}
}